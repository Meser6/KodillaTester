DROP ISSUESLISTS IF EXISTS ISSUESLISTS ;
DROP ISSUES IF EXISTS ISSUES ;

DROP USERS IF EXISTS;
CREATE TABLE USERS
(
    ID          SERIAL PRIMARY KEY,
    FIRSTNAME   VARCHAR(100),
    LASTNAME    VARCHAR(100)
);

INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ("John", "Smith");
INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ("Zachary", "Lee");
INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ("Stephanie", "Kovalsky");
INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ("Thomas", "Landgren");
INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ("John", "Thomson");

CREATE TABLE ISSUESLISTS
(
	ID SERIAL PRIMARY KEY,
    NAME VARCHAR(1024)
    );

CREATE TABLE ISSUES
(
	ID SERIAL PRIMARY KEY,
	ISSUESLIST_ID BIGINT UNSIGNED NOT NULL,
    SUMMARY VARCHAR(150),
    DESCRIPTION VARCHAR(350),
    USERS_ID_ASSIGNEDTO BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUESLISTS(ID),
    FOREIGN KEY (USERS_ID_ASSIGNEDTO) REFERENCES USERS(ID)
    );




INSERT INTO ISSUESLISTS (NAME)
VALUES("ToDo");

INSERT INTO ISSUESLISTS (NAME)
VALUES("In progress");

INSERT INTO ISSUESLISTS (NAME)
VALUES("Done");

COMMIT;



INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USERS_ID_ASSIGNEDTO)
VALUES (1, "FNJA", "JDJASDJKA", 3);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USERS_ID_ASSIGNEDTO)
VALUES (2, "FNCZZA", "JDJACZCZ", 2);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USERS_ID_ASSIGNEDTO)
VALUES (1, "FNCZA", "JDJCZXCZSDJKA", 3);

INSERT INTO  ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USERS_ID_ASSIGNEDTO)
VALUES (3, "NZA", "JDJASDJCZCXKA", 4);

INSERT INTO  ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USERS_ID_ASSIGNEDTO)
VALUES (2, "CZXJA", "JDJACZSDJKA", 2);

COMMIT;
